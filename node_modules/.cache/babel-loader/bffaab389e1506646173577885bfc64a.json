{"ast":null,"code":"var _jsxFileName = \"/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport \"./login.css\";\nimport validateUtility from \"../../../utils/ValidateUtility\";\nimport GoogleLoginButton from \"../../widgets/googleLogin\";\nimport google from \"../../../scss/images/google.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [fieldobj, setFieldObj] = useState({\n    email: \"manish.kumar212111@gmail.com\",\n    password: \"Password@123\"\n  });\n  const [errorObj, setErrorObj] = useState({\n    email: {\n      error: true,\n      msg: \"Please enter valid email\"\n    },\n    password: {\n      error: true,\n      msg: \"Please enter valid password\"\n    }\n  });\n\n  const validateField = (key, value) => {\n    value = value ? value : fieldobj[key];\n\n    switch (key) {\n      case \"email\":\n        return validateUtility.email(value);\n\n      case \"password\":\n        return validateUtility.required(value);\n\n      default:\n        return true;\n    }\n  };\n\n  const handleChange = e => {\n    let field = fieldobj;\n    field[e.target.name] = e.target.value;\n    setFieldObj(fieldOb => ({ ...fieldOb,\n      ...field\n    }));\n    let errOb = errorObj;\n    errOb[e.target.name].error = validateField(e.target.name);\n    setErrorObj(errorOb => ({ ...errorOb,\n      errOb\n    }));\n  };\n\n  const handleClick = () => {\n    let requiredObj = ['email', 'password'];\n    let errOb = errorObj;\n    let status = true;\n    requiredObj.forEach(element => {\n      let errorStatus = validateField(element);\n      errOb[element].error = errorStatus;\n      status = status && errorStatus;\n    });\n    setErrorObj(errorOb => ({ ...errorOb,\n      errOb\n    }));\n    if (!status) return;\n    console.log(fieldobj);\n    props.SubmitCb(fieldobj);\n  };\n\n  const loginCb = token => {\n    props.googleLoginCb(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-pane fade show  \",\n    id: \"logintab\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"v-pills-home-tab\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 form-group mt-1\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control f-12\",\n          type: \"text\",\n          placeholder: \"Enter Email\",\n          name: \"email\",\n          value: fieldobj.email,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 form-group mt-1\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control f-12\",\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          name: \"password\",\n          value: fieldobj.password,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"btn btn-primary d-block shadow\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 44\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"btn btn-outline-muted d-block mt-4 shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: google\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 87\n          }, this), \" Login with Google\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this) // <div className=\"login-container\">  \n  //     <GoogleLoginButton loginCb = {loginCb}/>  \n  //     <div className=\"container\">\n  //         <label for=\"uname\"><b>Email</b></label>\n  //             <span className=\"error\">{!errorObj.email.error && errorObj.email.msg}</span>\n  //             <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" value={fieldobj.email} onChange={(e) => handleChange(e)} required />\n  //         <label for=\"psw\"><b>Password</b></label>\n  //             <span className=\"error\">{!errorObj.password.error && errorObj.password.msg}</span>\n  //             <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" value={fieldobj.password} onChange={(e) => handleChange(e)} required />\n  //         <button type=\"submit\" onClick={handleClick}>Login</button>\n  //         <label>\n  //             <input type=\"checkbox\" checked=\"checked\" name=\"remember\" /> Remember me\n  //         </label>\n  //     </div>\n  // </div>\n  ;\n};\n\n_s(Login, \"hzUaS3L6rwAPVtj72kyhL3dscYA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/Login/index.js"],"names":["React","useState","useEffect","Fragment","validateUtility","GoogleLoginButton","Login","props","fieldobj","setFieldObj","email","password","errorObj","setErrorObj","error","msg","validateField","key","value","required","handleChange","e","field","target","name","fieldOb","errOb","errorOb","handleClick","requiredObj","status","forEach","element","errorStatus","console","log","SubmitCb","loginCb","token","googleLoginCb","google"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA4BC,SAA5B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BR,QAAQ,CAAC;AAAES,IAAAA,KAAK,EAAG,8BAAV;AAA2CC,IAAAA,QAAQ,EAAG;AAAtD,GAAD,CAAzC;AACA,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BZ,QAAQ,CAAC;AAAES,IAAAA,KAAK,EAAG;AAAEI,MAAAA,KAAK,EAAG,IAAV;AAAiBC,MAAAA,GAAG,EAAG;AAAvB,KAAV;AACEJ,IAAAA,QAAQ,EAAG;AAAEG,MAAAA,KAAK,EAAG,IAAV;AAAiBC,MAAAA,GAAG,EAAG;AAAvB;AADb,GAAD,CAAzC;;AAEA,QAAMC,aAAa,GAAG,CAACC,GAAD,EAAOC,KAAP,KAAiB;AACnCA,IAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAWV,QAAQ,CAACS,GAAD,CAAhC;;AACA,YAAOA,GAAP;AACI,WAAK,OAAL;AACI,eAAQb,eAAe,CAACM,KAAhB,CAAsBQ,KAAtB,CAAR;;AACJ,WAAK,UAAL;AACI,eAAQd,eAAe,CAACe,QAAhB,CAAyBD,KAAzB,CAAR;;AAEJ;AACI,eAAO,IAAP;AAPR;AASH,GAXD;;AAYA,QAAME,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIC,KAAK,GAAGd,QAAZ;AACAc,IAAAA,KAAK,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAL,GAAuBH,CAAC,CAACE,MAAF,CAASL,KAAhC;AACAT,IAAAA,WAAW,CAACgB,OAAO,KAAK,EAAC,GAAGA,OAAJ;AAAc,SAAGH;AAAjB,KAAL,CAAR,CAAX;AAEA,QAAII,KAAK,GAAGd,QAAZ;AACAc,IAAAA,KAAK,CAACL,CAAC,CAACE,MAAF,CAASC,IAAV,CAAL,CAAqBV,KAArB,GAA6BE,aAAa,CAACK,CAAC,CAACE,MAAF,CAASC,IAAV,CAA1C;AAEAX,IAAAA,WAAW,CAAEc,OAAO,KAAM,EAAE,GAAGA,OAAL;AAAeD,MAAAA;AAAf,KAAN,CAAT,CAAX;AACH,GATD;;AAWA,QAAME,WAAW,GAAG,MAAM;AACtB,QAAIC,WAAW,GAAG,CAAC,OAAD,EAAW,UAAX,CAAlB;AACA,QAAIH,KAAK,GAAGd,QAAZ;AAEA,QAAIkB,MAAM,GAAG,IAAb;AACAD,IAAAA,WAAW,CAACE,OAAZ,CAAoBC,OAAO,IAAI;AAC3B,UAAIC,WAAW,GAAGjB,aAAa,CAACgB,OAAD,CAA/B;AACAN,MAAAA,KAAK,CAACM,OAAD,CAAL,CAAelB,KAAf,GAAuBmB,WAAvB;AACAH,MAAAA,MAAM,GAAGA,MAAM,IAAIG,WAAnB;AACH,KAJD;AAKApB,IAAAA,WAAW,CAAEc,OAAO,KAAM,EAAE,GAAGA,OAAL;AAAeD,MAAAA;AAAf,KAAN,CAAT,CAAX;AACA,QAAG,CAACI,MAAJ,EACI;AAEJI,IAAAA,OAAO,CAACC,GAAR,CAAY3B,QAAZ;AACAD,IAAAA,KAAK,CAAC6B,QAAN,CAAe5B,QAAf;AAEH,GAjBD;;AAmBA,QAAM6B,OAAO,GAAIC,KAAD,IAAW;AACvB/B,IAAAA,KAAK,CAACgC,aAAN,CAAoBD,KAApB;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,EAAE,EAAC,UAAzC;AAAoD,IAAA,IAAI,EAAC,UAAzD;AAAoE,uBAAgB,kBAApF;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,mBAAjB;AAAqC,UAAA,IAAI,EAAC,MAA1C;AAAiD,UAAA,WAAW,EAAC,aAA7D;AAA2E,UAAA,IAAI,EAAC,OAAhF;AAAwF,UAAA,KAAK,EAAE9B,QAAQ,CAACE,KAAxG;AAA+G,UAAA,QAAQ,EAAGW,CAAD,IAAOD,YAAY,CAACC,CAAD;AAA5I;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,mBAAjB;AAAqC,UAAA,IAAI,EAAC,UAA1C;AAAqD,UAAA,WAAW,EAAC,gBAAjE;AAAkF,UAAA,IAAI,EAAC,UAAvF;AAAkG,UAAA,KAAK,EAAEb,QAAQ,CAACG,QAAlH;AAA4H,UAAA,QAAQ,EAAGU,CAAD,IAAOD,YAAY,CAACC,CAAD;AAAzJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAA2B;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAC,gCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BAA2B;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BAEI;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAC,2CAAtB;AAAA,kCAAkE;AAAK,YAAA,GAAG,EAAEmB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAkBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCJ;AAkCH,CAnFD;;GAAMlC,K;;KAAAA,K;AAqFN,eAAeA,KAAf","sourcesContent":["import React , { useState , useEffect , Fragment } from \"react\";\nimport \"./login.css\";\nimport validateUtility from \"../../../utils/ValidateUtility\"\nimport GoogleLoginButton from \"../../widgets/googleLogin\";\nimport google from \"../../../scss/images/google.svg\"\nconst Login = (props) => {\n    const [fieldobj , setFieldObj] = useState({ email : \"manish.kumar212111@gmail.com\" , password : \"Password@123\" });\n    const [errorObj , setErrorObj] = useState({ email : { error : true , msg : \"Please enter valid email\" } , \n                                                password : { error : true , msg : \"Please enter valid password\" } })\n    const validateField = (key , value) => {\n        value = value ? value : fieldobj[key] \n        switch(key) {\n            case \"email\" :\n                return  validateUtility.email(value)\n            case \"password\" :\n                return  validateUtility.required(value)\n                \n            default :\n                return true;\n        }\n    }\n    const handleChange = (e) => {\n        let field = fieldobj;\n        field[e.target.name] = e.target.value;\n        setFieldObj(fieldOb => ({...fieldOb , ...field}))\n\n        let errOb = errorObj;\n        errOb[e.target.name].error = validateField(e.target.name);\n\n        setErrorObj( errorOb => ( { ...errorOb , errOb}))\n    }\n    \n    const handleClick = () => {\n        let requiredObj = ['email' , 'password'];\n        let errOb = errorObj;\n\n        let status = true;\n        requiredObj.forEach(element => {\n            let errorStatus = validateField(element);\n            errOb[element].error = errorStatus;\n            status = status && errorStatus;\n        })\n        setErrorObj( errorOb => ( { ...errorOb , errOb}))\n        if(!status)\n            return;\n        \n        console.log(fieldobj);  \n        props.SubmitCb(fieldobj)  \n\n    }\n\n    const loginCb = (token) => {\n        props.googleLoginCb(token);\n    }\n    return (\n        <div className=\"tab-pane fade show  \" id=\"logintab\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">\n            <div className=\"row\">\n                <div className=\"col-md-12 form-group mt-1\">\n                    <input className=\"form-control f-12\" type=\"text\" placeholder=\"Enter Email\" name=\"email\" value={fieldobj.email} onChange={(e) => handleChange(e)} />\n                </div>\n                <div className=\"col-md-12 form-group mt-1\">\n                    <input className=\"form-control f-12\" type=\"password\" placeholder=\"Enter Password\" name=\"password\" value={fieldobj.password} onChange={(e) => handleChange(e)} />\n                </div>\n\n                <div className=\"col-md-12\"><a href=\"#\" className=\"btn btn-primary d-block shadow\">Login</a> </div>\n                <div className=\"col-md-12\"><div className=\"option text-center\"><span>or</span></div></div>\n                <div className=\"col-md-12\">\n                    {/* <GoogleLoginButton loginCb = {loginCb} buttonText=\"Login with Google\" />  */}\n                    <a href=\"#\" className=\"btn btn-outline-muted d-block mt-4 shadow\"><img src={google} /> Login with Google</a> \n                </div>\n            </div>\n        </div>\n        // <div className=\"login-container\">  \n        //     <GoogleLoginButton loginCb = {loginCb}/>  \n        //     <div className=\"container\">\n        //         <label for=\"uname\"><b>Email</b></label>\n        //             <span className=\"error\">{!errorObj.email.error && errorObj.email.msg}</span>\n        //             <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" value={fieldobj.email} onChange={(e) => handleChange(e)} required />\n        //         <label for=\"psw\"><b>Password</b></label>\n        //             <span className=\"error\">{!errorObj.password.error && errorObj.password.msg}</span>\n        //             <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" value={fieldobj.password} onChange={(e) => handleChange(e)} required />\n        //         <button type=\"submit\" onClick={handleClick}>Login</button>\n        //         <label>\n        //             <input type=\"checkbox\" checked=\"checked\" name=\"remember\" /> Remember me\n        //         </label>\n        //     </div>\n        // </div>\n    )\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}