{"ast":null,"code":"var _jsxFileName = \"/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/forgotPassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport validateUtility from \"../../../utils/ValidateUtility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = props => {\n  _s();\n\n  const [fieldobj, setFieldObj] = useState({\n    email: \"manish.kumar212111@gmail.com\"\n  });\n  const [errorObj, setErrorObj] = useState({\n    email: {\n      error: true,\n      msg: \"Please enter valid email\"\n    }\n  });\n\n  const validateField = (key, value) => {\n    value = value ? value : fieldobj[key];\n\n    switch (key) {\n      case \"email\":\n        return validateUtility.email(value);\n\n      default:\n        return true;\n    }\n  };\n\n  const handleChange = e => {\n    let field = fieldobj;\n    field[e.target.name] = e.target.value;\n    setFieldObj(fieldOb => ({ ...fieldOb,\n      ...field\n    }));\n    let errOb = errorObj;\n    errOb[e.target.name].error = validateField(e.target.name);\n    setErrorObj(errorOb => ({ ...errorOb,\n      errOb\n    }));\n  };\n\n  const handleClick = () => {\n    let requiredObj = ['email'];\n    let errOb = errorObj;\n    let status = true;\n    requiredObj.forEach(element => {\n      let errorStatus = validateField(element);\n      errOb[element].error = errorStatus;\n      status = status && errorStatus;\n    });\n    setErrorObj(errorOb => ({ ...errorOb,\n      errOb\n    }));\n    if (!status) return;\n    console.log(fieldobj);\n    props.SubmitCb(fieldobj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter Email associated with your account to get reset password link over email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"uname\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: !errorObj.email.error && errorObj.email.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Email\",\n        name: \"email\",\n        value: fieldobj.email,\n        onChange: e => handleChange(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleClick,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgotPassword, \"6W9sfdREUqZFQc1S9nuMBJBQQ4s=\");\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/forgotPassword/index.js"],"names":["React","useState","useEffect","Fragment","validateUtility","ForgotPassword","props","fieldobj","setFieldObj","email","errorObj","setErrorObj","error","msg","validateField","key","value","handleChange","e","field","target","name","fieldOb","errOb","errorOb","handleClick","requiredObj","status","forEach","element","errorStatus","console","log","SubmitCb"],"mappings":"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","sourcesContent":["import React , { useState , useEffect , Fragment } from \"react\";\nimport validateUtility from \"../../../utils/ValidateUtility\"\n\nconst ForgotPassword = (props) => {\n    const [fieldobj , setFieldObj] = useState({ email : \"manish.kumar212111@gmail.com\"});\n    const [errorObj , setErrorObj] = useState({ email : { error : true , msg : \"Please enter valid email\" } })\n    const validateField = (key , value) => {\n        value = value ? value : fieldobj[key] \n        switch(key) {\n            case \"email\" :\n                return  validateUtility.email(value);\n            default :\n                return true;\n        }\n    }\n    const handleChange = (e) => {\n        let field = fieldobj;\n        field[e.target.name] = e.target.value;\n        setFieldObj(fieldOb => ({...fieldOb , ...field}))\n\n        let errOb = errorObj;\n        errOb[e.target.name].error = validateField(e.target.name);\n\n        setErrorObj( errorOb => ( { ...errorOb , errOb}))\n    }\n    \n    const handleClick = () => {\n        let requiredObj = ['email'];\n        let errOb = errorObj;\n\n        let status = true;\n        requiredObj.forEach(element => {\n            let errorStatus = validateField(element);\n            errOb[element].error = errorStatus;\n            status = status && errorStatus;\n        })\n        setErrorObj( errorOb => ( { ...errorOb , errOb}))\n        if(!status)\n            return;\n        \n        console.log(fieldobj);  \n        props.SubmitCb(fieldobj)  \n\n    }\n    return (\n        <div className=\"login-container\">    \n            <div className=\"container\">\n                <p>Enter Email associated with your account to get reset password link over email</p>\n                <label for=\"uname\"><b>Email</b></label>\n                    <span className=\"error\">{!errorObj.email.error && errorObj.email.msg}</span>\n                    <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" value={fieldobj.email} onChange={(e) => handleChange(e)} required />\n                <button type=\"submit\" onClick={handleClick}>Send Email</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}