{"ast":null,"code":"import { setAlert } from \"./alert\";\nimport API from \"../API\";\nexport const loginUser = data => dispatch => {\n  try {\n    dispatch({\n      type: \"LOGIN_USER_LOADING\",\n      data: true\n    });\n    API.post('Login', data, '', function (res) {\n      if (res && res.data.user) {\n        dispatch({\n          type: \"LOGIN_USER\",\n          data: res.data\n        });\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n\n      dispatch({\n        type: \"LOGIN_USER_LOADING\",\n        data: false\n      });\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};\nexport const GoogleLoginValidate = data => dispatch => {\n  try {\n    dispatch({\n      type: \"LOGIN_USER_LOADING\",\n      data: true\n    });\n    API.post('GoogleLoginValidate', data, '', function (res) {\n      if (res && res.data.user) {\n        dispatch({\n          type: \"LOGIN_USER\",\n          data: res.data\n        });\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n\n      dispatch({\n        type: \"LOGIN_USER_LOADING\",\n        data: false\n      });\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};\nexport const registerUser = data => dispatch => {\n  try {\n    dispatch({\n      type: \"LOGIN_USER_LOADING\",\n      data: true\n    });\n    API.post('Register', data, '', function (res) {\n      if (res && res.data.user) {\n        dispatch({\n          type: \"REGISTER_USER\",\n          data: res.data\n        });\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n\n      dispatch({\n        type: \"LOGIN_USER_LOADING\",\n        data: false\n      });\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};\nexport const sendResetLink = data => dispatch => {\n  try {\n    dispatch({\n      type: \"LOGIN_USER_LOADING\",\n      data: true\n    });\n    API.post('Forgot_Password', data, '', function (res) {\n      console.log(res);\n\n      if (res && !res.data.message) {\n        dispatch(setAlert(\"Reset link sent\", 'success'));\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n\n      dispatch({\n        type: \"LOGIN_USER_LOADING\",\n        data: false\n      });\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};\nexport const resetPassword = (token, password) => dispatch => {\n  try {\n    API.post('ResetPassword', {\n      token: token,\n      password: password\n    }, '', function (res) {\n      if (res && !res.data.message) {\n        dispatch(setAlert(\"Password reset successfull\", 'success'));\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/dbws/projects/resume-maker/resume-react-ui/src/actions/auth.js"],"names":["setAlert","API","loginUser","data","dispatch","type","post","res","user","console","log","message","err","GoogleLoginValidate","registerUser","sendResetLink","resetPassword","token","password"],"mappings":"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","sourcesContent":["import { setAlert } from \"./alert\";\nimport API from \"../API\"\n\nexport const loginUser = ( data ) => dispatch =>{\n  try{\n    dispatch( { type: \"LOGIN_USER_LOADING\",\n      data : true\n    });\n\n    API.post('Login' , data, '' , function(res){\n      \n      if(res && res.data.user){\n          dispatch( { type: \"LOGIN_USER\",\n            data : res.data\n          });\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n        dispatch( { type: \"LOGIN_USER_LOADING\",\n          data : false\n        });\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}\n\nexport const GoogleLoginValidate = ( data ) => dispatch =>{\n  try{\n    dispatch( { type: \"LOGIN_USER_LOADING\",\n      data : true\n    });\n    API.post('GoogleLoginValidate' , data, '' , function(res){\n      \n      if(res && res.data.user){\n          dispatch( { type: \"LOGIN_USER\",\n            data : res.data\n          });\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n        dispatch( { type: \"LOGIN_USER_LOADING\",\n          data : false\n        });\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}\n\nexport const registerUser = ( data ) => dispatch =>{\n  try{\n    dispatch( { type: \"LOGIN_USER_LOADING\",\n      data : true\n    });\n    API.post('Register' , data, '' , function(res){\n      \n      if(res && res.data.user){\n          dispatch( { type: \"REGISTER_USER\",\n            data : res.data\n          });\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n        dispatch( { type: \"LOGIN_USER_LOADING\",\n          data : false\n        });\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}\n\n\nexport const sendResetLink = ( data ) => dispatch =>{\n  try{\n    dispatch( { type: \"LOGIN_USER_LOADING\",\n      data : true\n    });\n  \n    API.post('Forgot_Password' , data, '' , function(res){\n      console.log(res)\n      if(res && !res.data.message){\n        dispatch(setAlert(\"Reset link sent\" , 'success'));    \n      } else {\n          console.log(res.data.message);\n          dispatch(setAlert(res.data.message , 'danger'));    \n      }\n      dispatch( { type: \"LOGIN_USER_LOADING\",\n        data : false\n      });\n      \n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}\n\nexport const resetPassword = ( token , password ) => dispatch =>{\n  try{\n\n    API.post('ResetPassword' , { token : token , password : password}, '' , function(res){\n      if(res && !res.data.message){\n        dispatch(setAlert(\"Password reset successfull\" , 'success'));    \n\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}"]},"metadata":{},"sourceType":"module"}