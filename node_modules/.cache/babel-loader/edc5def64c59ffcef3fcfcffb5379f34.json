{"ast":null,"code":"var _jsxFileName = \"/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/UserChoiceNotif/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notificationTypes = ['RECIEVE_OFFER', 'UPDATES', 'CARRIERS', 'JOB_NOTIFICATIONS'];\nconst defaultProps = {\n  notifications: {\n    CARRIERS: false,\n    JOB_NOTIFICATIONS: false,\n    RECIEVE_OFFER: false,\n    UPDATES: false\n  }\n};\n\nconst UserChoiceNotif = props => {\n  _s();\n\n  const [notifications, setNotifications] = useState(props.notifications ? props.notifications : defaultProps.notifications);\n  useEffect(() => {\n    setNotifications(props.notifications);\n  }, [props.notifications]);\n\n  const handleChange = (e, name) => {\n    let notif = notifications;\n    notif[name] = e.target.checked;\n    console.log(e.target.checked, notif, notif[name], name);\n    setNotifications(fieldOb => ({ ...fieldOb,\n      ...notif\n    })); // props.updateNotification()\n    // updateNotifications();\n  };\n\n  const updateNotifications = () => {\n    props.submitCb({\n      notification: notifications\n    });\n  };\n\n  console.log(props.notifications, \"dfdfv\");\n\n  const notification = () => {\n    let h = [];\n    Object.keys(notifications).map(item => {\n      h.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-9\",\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3 pt-2 text-right\",\n              children: [\"  \", /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                for: \"checkbox1\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: e => handleChange(e, item),\n                  checked: notifications[item]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slider round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 73\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this) // <li><input type=\"checkbox\" onChange={(e) => handleChange(e , item)} checked={notifications[item]}></input>{item}</li>\n      );\n    });\n    return h;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mdi mdi-email-open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 34\n      }, this), \" Email notification\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-light p-4\",\n      children: notification()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this) // <div>\n  //     {notification()}\n  //     <input type=\"button\" onClick={() => updateNotifications()}/> update\n  // </div>\n  ;\n};\n\n_s(UserChoiceNotif, \"0x8TUsWVcGuaEeyEmYA9WZzzQpk=\");\n\n_c = UserChoiceNotif;\nUserChoiceNotif.defaultProps = defaultProps;\nexport default UserChoiceNotif;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserChoiceNotif\");","map":{"version":3,"sources":["/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/UserChoiceNotif/index.js"],"names":["React","useEffect","useState","notificationTypes","defaultProps","notifications","CARRIERS","JOB_NOTIFICATIONS","RECIEVE_OFFER","UPDATES","UserChoiceNotif","props","setNotifications","handleChange","e","name","notif","target","checked","console","log","fieldOb","updateNotifications","submitCb","notification","h","Object","keys","map","item","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nconst notificationTypes = ['RECIEVE_OFFER' , 'UPDATES', 'CARRIERS' , 'JOB_NOTIFICATIONS'];\n\nconst defaultProps = {\n    notifications : {CARRIERS: false,\n        JOB_NOTIFICATIONS: false,\n        RECIEVE_OFFER: false,\n        UPDATES: false }\n}\nconst UserChoiceNotif = (props) => {\n    const [notifications , setNotifications] = useState(props.notifications ? props.notifications : defaultProps.notifications);\n\n    useEffect(()=>{\n        setNotifications(props.notifications);\n    }, [props.notifications]);\n\n    const handleChange= (e, name) => {\n        let notif = notifications;\n        notif[name] = e.target.checked;\n        console.log(e.target.checked ,notif, notif[name] , name);\n        setNotifications(fieldOb => ({...fieldOb , ...notif}))\n\n    // props.updateNotification()\n        // updateNotifications();\n    }\n\n    const updateNotifications = () => {\n        props.submitCb({notification : notifications})\n    }\n    console.log(props.notifications , \"dfdfv\")\n\n    const notification = () => {\n        let h = [];\n        Object.keys(notifications).map( (item) => {\n            h.push(\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"row mb-3\">\n                            <div className=\"col-md-9\">\n                                <h6 className=\"mb-0\">{item}</h6>\n                                {/* <label className=\"text-muted f-14\">{item}</label> */}\n\n                            </div>\n                            <div className=\"col-md-3 pt-2 text-right\">  <label className=\"switch\" for=\"checkbox1\">\n                                <input type=\"checkbox\" onChange={(e) => handleChange(e , item)} checked={notifications[item]} />\n                                <div className=\"slider round\"></div>\n                            </label></div>\n                        </div>\n                \n                    </div>\n                </div>\n\n\n            // <li><input type=\"checkbox\" onChange={(e) => handleChange(e , item)} checked={notifications[item]}></input>{item}</li>\n            \n            \n            )\n        \n        });\n        return h;\n    }\n    \n    return (\n        <div className=\"col-md-6\">\n            <h6 className=\"mt-3\"><span className=\"mdi mdi-email-open\"></span> Email notification</h6>\n            <div className=\"bg-light p-4\">\n                {notification()}\n            </div>\n        </div>\n        // <div>\n        //     {notification()}\n        //     <input type=\"button\" onClick={() => updateNotifications()}/> update\n        // </div>\n    )\n}\n\nUserChoiceNotif.defaultProps = defaultProps;\nexport default UserChoiceNotif;"]},"metadata":{},"sourceType":"module"}