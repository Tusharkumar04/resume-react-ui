{"ast":null,"code":"import { setAlert } from \"./alert\";\nimport API from \"../API\";\nexport const loginUser = data => dispatch => {\n  try {\n    API.post('Login', data, '', function (res) {\n      if (res && res.data.user) {\n        dispatch({\n          type: \"LOGIN_USER\",\n          data: res.data\n        });\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};\nexport const GoogleLoginValidate = data => dispatch => {\n  try {\n    API.post('GoogleLoginValidate', data, '', function (res) {\n      if (res && res.data.user) {\n        dispatch({\n          type: \"LOGIN_USER\",\n          data: res.data\n        });\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};\nexport const registerUser = data => dispatch => {\n  try {\n    API.post('Register', data, '', function (res) {\n      if (res && res.data.user) {\n        dispatch({\n          type: \"REGISTER_USER\",\n          data: res.data\n        });\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};\nexport const sendResetLink = data => dispatch => {\n  try {\n    API.post('Forgot_Password', data, '', function (res) {\n      console.log(res);\n\n      if (res && !res.data.message) {\n        dispatch(setAlert(\"Reset link sent\", 'success'));\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};\nexport const resetPassword = (token, password) => dispatch => {\n  try {\n    API.post('ResetPassword', {\n      token: token,\n      password: password\n    }, '', function (res) {\n      if (res && !res.data.message) {\n        dispatch(setAlert(\"Password reset successfull \", 'success'));\n      } else {\n        console.log(res.data.message);\n        dispatch(setAlert(res.data.message, 'danger'));\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/dbws/projects/resume-maker/resume-react-ui/src/actions/auth.js"],"names":["setAlert","API","loginUser","data","dispatch","post","res","user","type","console","log","message","err","GoogleLoginValidate","registerUser","sendResetLink","resetPassword","token","password"],"mappings":"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","sourcesContent":["import { setAlert } from \"./alert\";\nimport API from \"../API\"\n\nexport const loginUser = ( data ) => dispatch =>{\n  try{\n\n    API.post('Login' , data, '' , function(res){\n      \n      if(res && res.data.user){\n          dispatch( { type: \"LOGIN_USER\",\n            data : res.data\n          });\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}\n\nexport const GoogleLoginValidate = ( data ) => dispatch =>{\n  try{\n\n    API.post('GoogleLoginValidate' , data, '' , function(res){\n      \n      if(res && res.data.user){\n          dispatch( { type: \"LOGIN_USER\",\n            data : res.data\n          });\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}\n\nexport const registerUser = ( data ) => dispatch =>{\n  try{\n\n    API.post('Register' , data, '' , function(res){\n      \n      if(res && res.data.user){\n          dispatch( { type: \"REGISTER_USER\",\n            data : res.data\n          });\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}\n\n\nexport const sendResetLink = ( data ) => dispatch =>{\n  try{\n\n    API.post('Forgot_Password' , data, '' , function(res){\n      console.log(res)\n      if(res && !res.data.message){\n        dispatch(setAlert(\"Reset link sent\" , 'success'));    \n\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}\n\nexport const resetPassword = ( token , password ) => dispatch =>{\n  try{\n\n    API.post('ResetPassword' , { token : token , password : password}, '' , function(res){\n      if(res && !res.data.message){\n        dispatch(setAlert(\"Password reset successfull \" , 'success'));    \n\n        } else {\n            console.log(res.data.message);\n            dispatch(setAlert(res.data.message , 'danger'));    \n        }\n    })\n    \n  } catch (err) {\n    console.log(err)\n    console.log(err)\n  }\n}"]},"metadata":{},"sourceType":"module"}