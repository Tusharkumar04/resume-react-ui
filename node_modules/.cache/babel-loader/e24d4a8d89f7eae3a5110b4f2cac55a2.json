{"ast":null,"code":"var _jsxFileName = \"/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/EditUserDetail/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport validateUtility from \"../../../utils/ValidateUtility\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUserDetail = props => {\n  _s();\n\n  const [fieldobj, setFieldObj] = useState({\n    email: props.email ? props.email : \"\",\n    first_name: props.first_name ? props.first_name : \"\",\n    last_name: props.last_name ? props.last_name : \"\",\n    dob: props.dob ? props.dob : \"\"\n  });\n  const [errorObj, setErrorObj] = useState({\n    email: {\n      error: true,\n      msg: \"Please enter valid email\"\n    },\n    first_name: {\n      error: true,\n      msg: \"Please enter valid first name\"\n    },\n    last_name: {\n      error: true,\n      msg: \"Please enter valid last name\"\n    },\n    dob: {\n      error: true,\n      msg: \"Please enter valid dob\"\n    }\n  });\n\n  const validateField = (key, value) => {\n    value = value ? value : fieldobj[key];\n\n    switch (key) {\n      case \"first-name\":\n        return validateUtility.required(value);\n\n      case \"first-name\":\n        return validateUtility.required(value);\n\n      case \"email\":\n        return validateUtility.email(value);\n\n      default:\n        return true;\n    }\n  };\n\n  const handleChange = e => {\n    let field = fieldobj;\n    field[e.target.name] = e.target.value;\n    setFieldObj(fieldOb => ({ ...fieldOb,\n      ...field\n    }));\n    let errOb = errorObj;\n    errOb[e.target.name].error = validateField(e.target.name);\n    setErrorObj(errorOb => ({ ...errorOb,\n      errOb\n    }));\n  };\n\n  const handleDateSelect = date => {\n    let field = fieldobj;\n    console.log(date);\n    field['dob'] = new Date(date);\n    setFieldObj(fieldOb => ({ ...fieldOb,\n      ...field\n    }));\n    let errOb = errorObj;\n    errOb['dob'].error = validateField(date);\n    setErrorObj(errorOb => ({ ...errorOb,\n      errOb\n    }));\n  };\n\n  const handleClick = () => {\n    let requiredObj = ['email'];\n    let errOb = errorObj;\n    let status = true;\n    requiredObj.forEach(element => {\n      let errorStatus = validateField(element);\n      errOb[element].error = errorStatus;\n      status = status && errorStatus;\n    });\n    setErrorObj(errorOb => ({ ...errorOb,\n      errOb\n    }));\n    if (!status) return;\n    console.log(fieldobj);\n    props.handleUserUpdate(fieldobj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 \",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mdi mdi-account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 26\n        }, this), \" Account Info\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-light p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control mb-4\",\n              type: \"text\",\n              placeholder: \"Enter First Name\",\n              name: \"first_name\",\n              value: fieldobj.first_name,\n              onChange: e => handleChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              placeholder: \"Enter Last Name\",\n              name: \"last_name\",\n              value: fieldobj.last_name,\n              onChange: e => handleChange(e),\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              children: \"Date of birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: fieldobj.dob ? new Date(fieldobj.dob) : \"\",\n              dateFormat: \"dd/MM/yyyy\",\n              onSelect: handleDateSelect //when day is clicked\n              ,\n              maxDate: new Date('01-01-2005'),\n              showYearDropdown: true,\n              showMonthDropdown: true,\n              placeholderText: \"Enter date of birth\",\n              className: \"form-control mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleClick,\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this) // <div className=\"container\">\n  //         <span onClick={() => {props.closeCb(false)}}>close</span>\n  //         <label for=\"uname\"><b>First Name</b></label>\n  //             <span className=\"error\">{!errorObj.first_name.error && errorObj.first_name.msg}</span>\n  //             <input type=\"text\" placeholder=\"Enter First Name\" name=\"first_name\" value={fieldobj.first_name} onChange={(e) => handleChange(e)} required />\n  //         <label for=\"uname\"><b>Last Name</b></label>\n  //             <span className=\"error\">{!errorObj.last_name.error && errorObj.last_name.msg}</span>\n  //             <input type=\"text\" placeholder=\"Enter Last Name\" name=\"last_name\" value={fieldobj.last_name} onChange={(e) => handleChange(e)} required />\n  //         <label for=\"uname\"><b>Email</b></label>\n  //             <span className=\"error\">{!errorObj.email.error && errorObj.email.msg}</span>\n  //             <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" value={fieldobj.email} onChange={(e) => handleChange(e)} disabled required />\n  //         <label for=\"psw\"><b>Date of birth</b></label>\n  //             <DatePicker\n  //                     selected={fieldobj.dob ? new Date(fieldobj.dob) : \"\"}\n  //                     dateFormat=\"dd/MM/yyyy\"\n  //                     onSelect={handleDateSelect} //when day is clicked\n  //                     maxDate={new Date('01-01-2005')}\n  //                     showYearDropdown = {true}\n  //                     showMonthDropdown = {true}\n  //                     placeholderText=\"Enter date of birth\"\n  //                 />\n  //         <button type=\"submit\" onClick={handleClick}>Update</button>\n  //         {/* <span className=\"psw\">Forgot <a href=\"#\">password?</a></span> */}\n  // </div>\n  ;\n};\n\n_s(EditUserDetail, \"hkjFzuBHalsbCBiOSqHp6/35Vr0=\");\n\n_c = EditUserDetail;\nexport default EditUserDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserDetail\");","map":{"version":3,"sources":["/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/EditUserDetail/index.js"],"names":["React","useState","useEffect","Fragment","validateUtility","DatePicker","EditUserDetail","props","fieldobj","setFieldObj","email","first_name","last_name","dob","errorObj","setErrorObj","error","msg","validateField","key","value","required","handleChange","e","field","target","name","fieldOb","errOb","errorOb","handleDateSelect","date","console","log","Date","handleClick","requiredObj","status","forEach","element","errorStatus","handleUserUpdate"],"mappings":"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","sourcesContent":["import React , { useState , useEffect , Fragment } from \"react\";\nimport validateUtility from \"../../../utils/ValidateUtility\"\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst EditUserDetail = (props) => {\n    const [fieldobj , setFieldObj] = useState({ email : props.email ? props.email : \"\" ,\n                                                first_name : props.first_name ? props.first_name :  \"\",\n                                                last_name : props.last_name ? props.last_name : \"\",\n                                                dob : props.dob ? props.dob : \"\"\n                                             });\n    const [errorObj , setErrorObj] = useState({ email : { error : true , msg : \"Please enter valid email\" } , \n                                                first_name : { error : true , msg : \"Please enter valid first name\"},\n                                                last_name : { error : true , msg : \"Please enter valid last name\"},\n                                                dob : { error : true , msg : \"Please enter valid dob\"},\n                                             })\n    const validateField = (key , value) => {\n        value = value ? value : fieldobj[key] \n        switch(key) {\n            case \"first-name\":\n                return  validateUtility.required(value)\n            case \"first-name\":\n                return  validateUtility.required(value)\n            case \"email\" :\n                return  validateUtility.email(value)\n\n            default :\n                return true;\n        }\n    }\n    const handleChange = (e) => {\n        let field = fieldobj;\n        field[e.target.name] = e.target.value;\n        setFieldObj(fieldOb => ({...fieldOb , ...field}))\n\n        let errOb = errorObj;\n        errOb[e.target.name].error = validateField(e.target.name);\n\n        setErrorObj( errorOb => ( { ...errorOb , errOb}))\n    }\n\n    const handleDateSelect = (date) => {\n        let field = fieldobj;\n        console.log(date)\n         field['dob'] = new Date(date);\n        setFieldObj(fieldOb => ({...fieldOb , ...field}))\n\n        let errOb = errorObj;\n        errOb['dob'].error = validateField(date);\n\n        setErrorObj( errorOb => ( { ...errorOb , errOb}))\n    }\n    const handleClick = () => {\n        let requiredObj = ['email'];\n        let errOb = errorObj;\n\n        let status = true;\n        requiredObj.forEach(element => {\n            let errorStatus = validateField(element);\n            errOb[element].error = errorStatus;\n            status = status && errorStatus;\n        })\n        setErrorObj( errorOb => ( { ...errorOb , errOb}))\n        if(!status)\n            return;\n        \n        console.log(fieldobj);  \n        props.handleUserUpdate(fieldobj)  \n\n    }\n\n                                             \n    return(\n        <div className=\"row\">\n                <div className=\"col-md-12 \">\n                    <h6> <span className=\"mdi mdi-account\"></span> Account Info</h6>\n                </div>\n                <div className=\"col-md-12\">\n                    <div className=\"bg-light p-4\">\n                   <div className=\"row\">\n                       <div className=\"col-md-4\">\n                           <label className=\"text-muted\">First Name</label>\n                           <input className=\"form-control mb-4\" type=\"text\" placeholder=\"Enter First Name\" name=\"first_name\" value={fieldobj.first_name} onChange={(e) => handleChange(e)} required />\n                       </div>\n                       <div className=\"col-md-4\">\n                           <label className=\"text-muted\" placeholder=\"Enter Last Name\" name=\"last_name\" value={fieldobj.last_name} onChange={(e) => handleChange(e)}>Last name</label>\n                           <input type=\"text\"  className=\"form-control mb-4\"/>\n                       </div>\n                       <div className=\"col-md-4\">\n                           <label className=\"text-muted\">Date of birth</label>\n                           <DatePicker\n                                selected={fieldobj.dob ? new Date(fieldobj.dob) : \"\"}\n                                dateFormat=\"dd/MM/yyyy\"\n                                onSelect={handleDateSelect} //when day is clicked\n                                maxDate={new Date('01-01-2005')}\n                                showYearDropdown = {true}\n                                showMonthDropdown = {true}\n                                placeholderText=\"Enter date of birth\"\n                                className=\"form-control mb-4\"\n                        />\n                           {/* <input type=\"text\" className=\"form-control mb-4 \"/> */}\n                       </div>\n                       <div className=\"col-md-12 text-right\">\n                           <button className=\"btn btn-primary\" onClick={handleClick}>SAVE</button>\n                       </div>\n                   </div>\n                    </div>\n                </div>\n            </div>\n        \n        // <div className=\"container\">\n        //         <span onClick={() => {props.closeCb(false)}}>close</span>\n        //         <label for=\"uname\"><b>First Name</b></label>\n        //             <span className=\"error\">{!errorObj.first_name.error && errorObj.first_name.msg}</span>\n        //             <input type=\"text\" placeholder=\"Enter First Name\" name=\"first_name\" value={fieldobj.first_name} onChange={(e) => handleChange(e)} required />\n        //         <label for=\"uname\"><b>Last Name</b></label>\n        //             <span className=\"error\">{!errorObj.last_name.error && errorObj.last_name.msg}</span>\n        //             <input type=\"text\" placeholder=\"Enter Last Name\" name=\"last_name\" value={fieldobj.last_name} onChange={(e) => handleChange(e)} required />\n        //         <label for=\"uname\"><b>Email</b></label>\n        //             <span className=\"error\">{!errorObj.email.error && errorObj.email.msg}</span>\n        //             <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" value={fieldobj.email} onChange={(e) => handleChange(e)} disabled required />\n        //         <label for=\"psw\"><b>Date of birth</b></label>\n                    \n        //             <DatePicker\n        //                     selected={fieldobj.dob ? new Date(fieldobj.dob) : \"\"}\n        //                     dateFormat=\"dd/MM/yyyy\"\n        //                     onSelect={handleDateSelect} //when day is clicked\n        //                     maxDate={new Date('01-01-2005')}\n        //                     showYearDropdown = {true}\n        //                     showMonthDropdown = {true}\n        //                     placeholderText=\"Enter date of birth\"\n        //                 />\n        //         <button type=\"submit\" onClick={handleClick}>Update</button>\n        //         {/* <span className=\"psw\">Forgot <a href=\"#\">password?</a></span> */}\n\n        // </div>\n    )\n}\n\nexport default EditUserDetail;"]},"metadata":{},"sourceType":"module"}