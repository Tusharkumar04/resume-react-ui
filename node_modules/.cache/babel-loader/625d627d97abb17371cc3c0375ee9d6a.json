{"ast":null,"code":"var _jsxFileName = \"/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextEditor = props => {\n  _s();\n\n  const [isContentEditable, setContentEditable] = useState(false);\n\n  const bold = e => {\n    e.preventDefault();\n    document.execCommand(\"bold\");\n  };\n\n  const italic = e => {\n    e.preventDefault();\n    document.execCommand(\"italic\");\n  };\n\n  const underline = e => {\n    e.preventDefault();\n    document.execCommand(\"underline\");\n  };\n\n  const handleChange = e => {\n    window.temp = e.target.html;\n    console.log(e.target, e.target.value);\n  };\n\n  const onFocus = e => {\n    setContentEditable(true);\n    console.log(e);\n  };\n\n  const onBlur = e => {\n    setContentEditable(false);\n    console.log(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bold,\n      children: \"Bold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: italic,\n      children: \"Italic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: underline,\n      children: \"Underline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isContentEditable ? \"editable\" : \"\",\n      contentEditable: isContentEditable,\n      onDoubleClick: e => onFocus(e),\n      onBlur: e => onBlur(e),\n      onFocus: e => onFocus(e),\n      onInput: e => handleChange(e),\n      children: \"I am a rich text editor. You can also use CTRL-B, CTRL-I and CTRL-U to bold, italicize, and underline. If you look at my HTML you'll see HTML tags being added too :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n\n_s(TextEditor, \"QwstE68VkBMGFoQzYRpVzbJemXE=\");\n\n_c = TextEditor;\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/home/dbws/projects/resume-maker/resume-react-ui/src/components/widgets/TextEditor.js"],"names":["React","useState","TextEditor","props","isContentEditable","setContentEditable","bold","e","preventDefault","document","execCommand","italic","underline","handleChange","window","temp","target","html","console","log","value","onFocus","onBlur"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,iBAAD,EAAqBC,kBAArB,IAA2CJ,QAAQ,CAAC,KAAD,CAAzD;;AACA,QAAMK,IAAI,GAAIC,CAAD,IAAO;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AACD,GAHH;;AAKA,QAAMC,MAAM,GAAIJ,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,QAArB;AACD,GAHH;;AAKA,QAAME,SAAS,GAAGL,CAAD,IAAM;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,WAArB;AACD,GAHH;;AAKA,QAAMG,YAAY,GAAIN,CAAD,IAAO;AAC1BO,IAAAA,MAAM,CAACC,IAAP,GAAYR,CAAC,CAACS,MAAF,CAASC,IAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAC,CAACS,MAAd,EAAuBT,CAAC,CAACS,MAAF,CAASI,KAAhC;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAId,CAAD,IAAO;AACrBF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACD,GAHD;;AAKA,QAAMe,MAAM,GAAIf,CAAD,IAAO;AACpBF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACD,GAHD;;AAIA,sBAAQ;AAAA,4BACJ;AAAQ,MAAA,OAAO,EAAED,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ;AAAQ,MAAA,OAAO,EAAEK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,eAGF;AAAQ,MAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHE,eAIJ;AAAK,MAAA,SAAS,EAAER,iBAAiB,GAAG,UAAH,GAAe,EAAhD;AAAoD,MAAA,eAAe,EAAEA,iBAArE;AAAwF,MAAA,aAAa,EAAGG,CAAD,IAAOc,OAAO,CAACd,CAAD,CAArH;AAA0H,MAAA,MAAM,EAAGA,CAAD,IAAOe,MAAM,CAACf,CAAD,CAA/I;AAAoJ,MAAA,OAAO,EAAGA,CAAD,IAAOc,OAAO,CAACd,CAAD,CAA3K;AAAgL,MAAA,OAAO,EAAGA,CAAD,IAAOM,YAAY,CAACN,CAAD,CAA5M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOH,CAtCD;;GAAML,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst TextEditor = (props) => {\n    const [isContentEditable , setContentEditable] = useState(false) \n    const bold = (e) => {\n        e.preventDefault();\n        document.execCommand(\"bold\");\n      }\n      \n    const italic = (e) => {\n        e.preventDefault();\n        document.execCommand(\"italic\");\n      }\n      \n    const underline= (e) =>{\n        e.preventDefault();\n        document.execCommand(\"underline\");\n      }\n\n    const handleChange = (e) => {\n      window.temp=e.target.html;\n      console.log(e.target , e.target.value);\n    }  \n\n    const onFocus = (e) => {\n      setContentEditable(true)\n      console.log(e)\n    }\n\n    const onBlur = (e) => {\n      setContentEditable(false);\n      console.log(e)\n    }\n    return (<div>\n        <button onClick={bold}>Bold</button>\n        <button onClick={italic}>Italic</button>\n          <button onClick={underline}>Underline</button>\n        <div className={isContentEditable ? \"editable\": \"\"} contentEditable={isContentEditable} onDoubleClick={(e) => onFocus(e)} onBlur={(e) => onBlur(e)} onFocus={(e) => onFocus(e)} onInput={(e) => handleChange(e)}>I am a rich text editor. You can also use CTRL-B, CTRL-I and CTRL-U to bold, italicize, and underline. If you look at my HTML you'll see HTML tags being added too :)</div>\n        \n      </div>);\n}\n\nexport default TextEditor;"]},"metadata":{},"sourceType":"module"}